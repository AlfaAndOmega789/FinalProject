version: '3.8'

services:
  db:
    image: postgres:15
    container_name: new_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: mongo:6
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  catalog:
    env_file:
      - catalog_service/internal/config/.env
    build:
      context: catalog_service
    container_name: catalog_service
    depends_on:
      - db
    environment:
      - GOTOOLCHAIN=auto
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8081:8081"

  order:
    env_file:
      - order_service/.env
    build:
      context: order_service
    container_name: order_service
    depends_on:
      - db
    environment:
      - GOTOOLCHAIN=auto
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8082:8082"

  reviews:
    env_file:
      - reviews_service/.env
    build:
      context: reviews_service
    container_name: reviews_service
    depends_on:
      - db
      - mongo
    environment:
      - GOTOOLCHAIN=auto
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8083:8083"

  auth:
    env_file:
      - auth_service/.env
    build:
      context: auth_service
    container_name: auth_service
    depends_on:
      - db
    environment:
      - GOTOOLCHAIN=auto
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8084:8084"

  background:
    env_file:
      - ./backgroundService/.env
    build:
      context: backgroundService
    container_name: background_service
    depends_on:
      - db
    environment:
      - GOTOOLCHAIN=auto
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8085:8085"

volumes:
  db_data:
  mongo_data:
